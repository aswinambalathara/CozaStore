<script>
    //console.log(password.value)

    icons.forEach((icon) => {
      icon.addEventListener("click", () => {
        const parent = icon.parentElement;
        const input = parent.querySelector('input');
        input.disabled =
          !input.disabled;
          if(input.id === 'password'){
            input.disabled = true;
            passwordModal.click()
            validatePasswordForm()
          }
      });
    });

    fullName.addEventListener("blur", () => {
      const fullNameValue = fullName.value.trim();
      console.log(fullNameValue);
      let lettersOnlyRegex = /^[A-Za-z\s]*$/;
      if (!lettersOnlyRegex.test(fullNameValue)) {
        setError(fullName, "Only Letters Allowed");
      } else {
        setError(fullName, "");
      }
    });

    mobile.addEventListener("blur", () => {
      const mobileValue = mobile.value.trim();
      let mobileRegex = /^\d{10}$/;
      if (!mobileRegex.test(mobileValue)) {
        setError(mobile, "Invalid Mobile Number");
      } else {
        setError(mobile, "");
      }
    });

    email.addEventListener("blur", () => {
      const emailValue = email.value.trim();
      let emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailRegex.test(emailValue)) {
        setError(email, "Invalid Email Address");
      } else {
        setError(email, "");
      }
    });

    const setError = (element, message) => {
      const inputParent = element.parentElement;
      const errorDisplay = inputParent.querySelector(".error");

      errorDisplay.innerText = message;
    };

    const validateAll = () => {
      let hasError = false;

      if (fullName.disabled === false) {
        const fullNameValue = fullName.value.trim();
        // console.log(fullNameValue);
        let lettersOnlyRegex = /^[A-Za-z\s]*$/;
        if (!lettersOnlyRegex.test(fullNameValue)) {
          setError(fullName, "Only Letters Allowed");
          hasError = true;
        } else {
          setError(fullName, "");
        }
      }

      if (mobile.disabled === false) {
        const mobileValue = mobile.value.trim();
        let mobileRegex = /^\d{10}$/;
        if (!mobileRegex.test(mobileValue)) {
          setError(mobile, "Invalid Mobile Number");
          hasError = true;
        } else {
          setError(mobile, "");
        }
      }
      if (email.disabled === false) {
        const emailValue = email.value.trim();
        let emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(emailValue)) {
          setError(email, "Invalid Email Address");
          hasError = true;
        } else {
          setError(email, "");
        }
      }
      return hasError;
    }
    
    form.addEventListener("submit", (e) => {
      e.preventDefault();
      if (!validateAll()) {
        if (
          oldEmail !== email.value.trim() ||
          oldMobile !== mobile.value.trim()
        ) { 
            fetch('/user/sendotp',{
              method : "POST",
              headers :{
                "Content-Type":"application/json"
              },
              body : JSON.stringify({
                email : email.value.trim()
              })
            }).then((res)=>res.json())
            .then((data)=>{
              if(data.status === 'success'){
                modalBtn.click();
                document.querySelector('.email-not').innerText = `An otp has send to ${email.value.trim()}`
              }else{
                document.getElementById('server-error').innerText = data.message
              }
            })
        } else {
          form.submit();
        }
      }
    });
  </script>