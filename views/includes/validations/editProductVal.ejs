<script>
    const form = document.getElementById("addproductForm");
    const productName = document.getElementById("productName");
    const category = document.getElementById("category");
    const price = document.getElementById("price");
    const priceParent = document.getElementById("price-parent");
    const quantity = document.getElementById("quantity");
    const userTypes = document.getElementById("userTypes");
    const color = document.getElementById("colorinput");
    const sizeOptions = document.querySelectorAll(".btn-check");
    const sizeParent = document.getElementById("size-Parent");
    const description = document.getElementById("description");
    const desParent = document.getElementById("des-parent");
    const additionalInformation = document.getElementById(
      "additionalInformation"
    );

    const selectedSizeOptions = document.getElementById('sizeOptionsData').value.split(',')
    const checkBoxes = document.getElementsByName('sizeOptions');
    const selectedUserType = "<%=product.userType%>"
    const includedImages = "<%= product.images%>";
    const includedImagesNames = includedImages.split(',')
    const images = document.getElementById("images");
    const imageInput = document.getElementById("images");
    const previewImg = document.getElementById("preview-image");
  
    // Image Preview and Validation
    imageInput.addEventListener("change", (e) => {
      const files = e.target.files;
      previewImg.innerHTML = "";
  
      if (files.length > 4) {
        return setError(images, "Maximum 4 files can be uploaded");
      } else {
        setError(images, "");
      }
  
      const allowedExtensions = /(\.jpg|\.jpeg|\.png|\.webp)$/i;
  
      if (files.length > 0) {
        for (let image of files) {
          //console.log(image);
          if (!allowedExtensions.exec(image.name)) {
            return setError(images, "Check the file type");
          }
  
          const reader = new FileReader();
  
          reader.onload = function (event) {
            //console.log(event.target.result)
            const imgframe = document.createElement("div");
            imgframe.classList.add("img-frame");
            const img = document.createElement("img");
            img.src = event.target.result;
            img.classList.add("me-2", "border", "rounded");
            img.style.cssText = "width : 150px; height: 150px";
            imgframe.appendChild(img);
            previewImg.appendChild(imgframe);
          };
          reader.readAsDataURL(image);
        }
      }
    });
  

    includedImagesNames.forEach((image) => {
      const imageFrame = document.createElement('div');
      imageFrame.classList.add('img-frame');
      const img = document.createElement('img');
      img.src = `/images/product-images/${image}`
      img.classList.add("me-2", "border", "rounded");
      img.style.cssText = "width : 150px; height: 150px";
      imageFrame.appendChild(img);
      previewImg.appendChild(imageFrame);
    })

    console.log(includedImagesNames)

    Array.from(userTypes.options).forEach((option) => {
      if (selectedUserType.includes(option.value)) {
        option.selected = true
      }
    })

    checkBoxes.forEach((checkBox) => {
      if (selectedSizeOptions.includes(checkBox.value)) {
        checkBox.checked = true;
      } else {
        checkBox.checked = false;
      }
    })



    // Form submit validation
    form.addEventListener("submit", (e) => {
      e.preventDefault();
  
      if (validateInputs()) {
        form.submit();
      }
    });
  
    function validateInputs() {
      const productNameValue = productName.value.trim();
      //const categoryValue = category.value.trim();
      const priceValue = price.value.trim();
      //const quantityValue = quantity.value.trim();
      //const userTypesValue = userTypes.value.trim();
      //const descriptionValue = description.value.trim();
      const colorValue = color.value.trim();
      //const imagesValue = images.files;
  
      let hasError = false;
     
      const productRegex = /^(?!^[!@#%*+=/\\[\](){}<>,.?`|&^~$'":;-]*$)[a-zA-Z0-9\s\-',.()&!@#%*+="/\\[\]]+$/
        if (!productRegex.test(productNameValue)) {
          setError(productName, "symbols not allowed as product name");
          hasError = true;
        } else {
          setError(productName, "");
        }
  
        const priceRegex = /^\d+(\.\d{1,2})?$/;
        if (!priceRegex.test(priceValue) || parseFloat(priceValue) <= 0) {
          setError(priceParent, "Price value must be a positive number");
          hasError = true;
        } else {
          setError(priceParent, ""); // Clear error message if input is valid
        }
      
        const lettersOnlyRegex = /^[A-Za-z\s]*$/;
        if (!lettersOnlyRegex.test(colorValue)) {
          setError(color, "Only letters are allowed");
        } else {
          setError(color, "");
        }


      if (!hasError) {
        return true;
      }
    }
  
    function setError(element, message) {
      const inputParent = element.parentElement;
      const errorDisplay = inputParent.querySelector(".error");
  
      errorDisplay.innerText = message;
    }
  </script>
  