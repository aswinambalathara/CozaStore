<%- include('../includes/admin/adminhead')%>
  <!-- Body Wrapper -->
  <div class="page-wrapper" id="main-wrapper" data-layout="vertical" data-navbarbg="skin6" data-sidebartype="full"
    data-sidebar-position="fixed" data-header-position="fixed">
    <%- include('../includes/admin/adminSidebar')%>
      <!-- Main wraapper -->
      <div class="body-wrapper">
        <%- include('../includes/admin/adminHeader')%>
          <div class="container-fluid bg-light">
            <h5>Add New Offer</h5>
            <form action="/admin/offers/addoffer" method="post" class="addOfferForm" id="addOfferForm">
              <div class="row justify-content-between mt-4 mb-4">
                <div class="col-md-6 parent">
                  <label for="OfferName" class="form-label">Offer Name</label>
                  <input type="text" class="form-control" id="offerName" name="offerName">
                  <div class="error mt-1 ms-2" style="color: red;  font-size: small;"></div>
                </div>
                <div class="col-md-6 mt-4 mt-md-0 parent">
                  <label for="discount" class="form-label">Discount Percentage</label>
                  <input type="number" name="discountPercent" class="form-control" id="discount" min="0" max="50">
                  <div class="error mt-1 ms-2" style="color: red;  font-size: small;"></div>

                </div>
              </div>
              <div class="row justify-content-between mb-4">
                <div class="col-md-6 parent">
                  <label for="validFrom" class="form-label">Valid From</label>
                  <input type="date" class="form-control" id="validFrom" name="validFrom">
                  <div class="error mt-1 ms-2" style="color: red;  font-size: small;"></div>

                </div>
                <div class="col-md-6 mt-4 mt-md-0 parent">
                  <label for="validTo" class="form-label">Valid To</label>
                  <input type="date" class="form-control" id="validTo" name="validTo">
                  <div class="error mt-1 ms-2" style="color: red;  font-size: small;"></div>

                </div>
              </div>
              <div class="row justify-content-between mb-4">
                <div class="offer-Type-Div parent">
                  <label for="offerType" class="form-label">Offer Type</label>
                  <select name="offerType" id="offerType" class="form-select">
                    <option value="" selected>choose</option>
                    <option value="categoryOffer">Category Offer</option>
                    <option value="productOffer">Product Offer</option>
                  </select>
                  <div class="error mt-1 ms-2" style="color: red;  font-size: small;"></div>
                </div>
              </div>
              <div class="row mb-4 align-items-center justify-content-between" id="offerTypePreview">
                <!-- product-offer-preview       -->

                <div class="category-type-preview parent" hidden>
                  <label for="category" class="form-label">Categories</label>
                  <div class="category-list-div d-flex flex-wrap border border-secondary-subtle p-2 rounded ">
                    <% categories.forEach(function(category){%>
                      <div class="form-check me-3">
                        <label for="<%=category.categoryName%>" class="form-check-label"
                          style="text-transform: capitalize;">
                          <%=category.categoryName%>
                        </label>
                        <input type="checkbox" class="form-check-input" value="<%=category._id%>"
                          id="<%=category.categoryName%>" name="offerCategories">
                      </div>
                      <%})%>
                  </div>
                  <div class="error mt-1 ms-2" style="color: red;  font-size: small;"></div>
                </div>

                <div class="col-md-3 product-category-select-preview parent" hidden>
                  <small>Select a category</small>
                  <select name="productCategorySelect" id="productCategorySelect" class="form-select mt-2"
                    style="text-transform: capitalize;">
                    <option value="" id="default-product-cat" selected>Choose</option>
                    <% categories.forEach(function(category){%>
                      <option value="<%=category._id%>" style="text-transform: capitalize;">
                        <%=category.categoryName%>
                      </option>
                      <%})%>
                  </select>
                  <div class="error mt-1 ms-2" style="color: red;  font-size: small;"></div>
                </div>

                <div class="col-md-9 mt-2 mt-md-0 products-list-preview parent" hidden>
                  <p class="m-0">Select products</p>
                  <div class="product-list  border border-secondary-subtle align-self-end p-2 rounded mt-2">

                  </div>
                  <div class="error mt-1 ms-2" style="color: red;  font-size: small;"></div>
                </div>


              </div>
              <div class="d-flex align-items-center justify-content-center">
                <button class="btn btn-primary" type="submit" id="addOfferBtn">Add Offer</button>
                <div class="error mt-1 ms-2" style="color: red;  font-size: small;"></div>
              </div>
            </form>
          </div>
      </div>
  </div>

  <script>
    const addOfferForm = document.getElementById('addOfferForm');
    const offerName = document.getElementById('offerName');
    const validFrom = document.getElementById('validFrom');
    const validTo = document.getElementById('validTo');
    const discount = document.getElementById('discount');
    const offerTypeSelect = document.getElementById('offerType');
    const categoryTypePreview = document.querySelector('.category-type-preview');
    const categoryListDiv = document.querySelector('.category-list-div');
    const productCatSelectPreview = document.querySelector('.product-category-select-preview');
    const productCategorySelect = document.getElementById('productCategorySelect');
    const productListPreview = document.querySelector('.products-list-preview');
    let productList = document.querySelector('.product-list');
    const offerCategories = document.getElementsByName('offerCategories');
    let hasProductCheckError = false;

    offerName.addEventListener('blur', handleInputChange);
    validFrom.addEventListener('blur', handleInputChange);
    validTo.addEventListener('blur', handleInputChange);
    discount.addEventListener('blur', handleInputChange);
    addOfferForm.addEventListener('submit', handleAddOfferFormSubmit);
    productCategorySelect.addEventListener('blur', handleInputChange);


    offerTypeSelect.addEventListener('change', async (event) => {
      const offerTypeValue = event.target.value;
      if (offerTypeValue === "categoryOffer") {
        productCatSelectPreview.hidden = true;
        productListPreview.hidden = true;
        document.getElementById('default-product-cat').selected = true;
        productList.innerHTML = ''
        setError(offerTypeSelect, '')
        return categoryTypePreview.hidden = false
      } else if (offerTypeValue === "productOffer") {
        categoryTypePreview.hidden = true;
        setError(offerTypeSelect, '')
        return productCatSelectPreview.hidden = false;
      } else if (offerTypeValue === '') {
        productCatSelectPreview.hidden = true;
        productListPreview.hidden = true;
        categoryTypePreview.hidden = true;
        return setError(offerTypeSelect, "Select a offer type");
      }
    });

    productCategorySelect.addEventListener('change', async (event) => {
      const categoryId = event.target.value;
      if (categoryId === '') {
        productList.innerHTML = ''
        return setError(productCategorySelect, "Choose a category");
      } else {
        const url = '/admin/offers/fetchproductlist'
        const method = 'POST'
        const body = {
          categoryId: categoryId
        }
        const productsData = await fetchFunction(url, method, body);
        console.log(productsData);
        if (productsData.status === true) {
          productListPreview.hidden = false;
          productsData.products.forEach((product) => {
            const prod = `<div class="form-check">
                      <input class="form-check-input" type="checkbox" value="${product._id}" id="${product.productName}" name="offerProducts">
                      <label class="form-check-label" for="${product.productName}" style="text-transform : capitalize;">
                        ${product.productName}
                      </label>
                    </div>`

            productList.innerHTML += prod;
          });
        }
      }
    })

    function handleAddOfferFormSubmit(event) {
      event.preventDefault();

      let hasError = false;
      const allInputs = [offerName, validFrom, validTo, discount, offerTypeSelect];

      if (offerTypeSelect.value === 'categoryOffer') {

        let haschecked = false;
        offerCategories.forEach((elem) => {
          if (elem.checked) {
            haschecked = true
          }
        });

        if (!haschecked) {
          hasError = true
          setError(categoryListDiv, "Check atleast one")
        } else {
          setError(categoryListDiv, "")
        }
      } else if (offerTypeSelect.value === 'productOffer') {
        if (productCategorySelect.value === '') {
          hasError = true
          setError(productCategorySelect, "Select atleast one");
        } else {
          setError(productCategorySelect, "")
        }
      }

      if(productCategorySelect.value !== ''){
        const offerProducts = document.getElementsByName('offerProducts');
        let haschecked = false
        offerProducts.forEach((elem)=>{
          if(elem.checked){
            haschecked = true
          }
        });

        if(!haschecked){
          hasError = true
          setError(productList,"check atleast one")
        }else{
          setError(productList,"");
        }
      }

      allInputs.forEach((input) => {
        const type = input.id;
        const value = input.value;

        const errorMessage = validateInputs(input, type, value);
        if (errorMessage) {
          hasError = true
          setError(input, errorMessage);
        } else {
          setError(input, '');
        }
      });

      if(!hasError){
        event.target.submit()
      }
    }

    function handleInputChange(event) {
      const input = event.target
      const type = input.id
      const value = input.value
      const errorMessage = validateInputs(input, type, value);
      setError(input, errorMessage);
    }

    const errorMessages = {
      offerName: {
        required: "This field is required"
      },
      discount: {
        required: "This field is required",
        invalid: "Maximum 50% discount is allowed",

      },
      validFrom: {
        required: "This field is required",
        invalid: "Valid From date must be before Valid To date",
        invalid2: "Enter a valid Date",
        invalid3: "Both dates cannot be same"
      },
      validTo: {
        required: "This field is required",
        invalid: "Valid To date must be after Valid From date",
        invalid2: "Enter a valid Date",
        invalid3: "Both dates cannot be same"
      },
      categories: {
        required: "Atleast one category must be selected",
      },
      products: {
        required: "Atleast one product must be selected"
      },
      offerType: {
        required: "This field is required"
      }
    }

    function validateInputs(input, type, value) {

      const errorMessage = errorMessages[type];
      const validToValue = Date.parse(validTo.value);
      const validFromValue = Date.parse(validFrom.value);
      let dates;

      if (value === '') {
        return errorMessage.required;
      }

      switch (type) {
        case 'discount':
          if (value > 50) {
            return errorMessage.invalid;
          }
          break;
        case 'validFrom':
          dates = validateDate(Date.parse(value), validToValue);
          if (dates.parsedDate >= dates.parsedOtherDate) {
            return errorMessage.invalid
          } else if (dates.parsedDate < dates.today) {
            return errorMessage.invalid2
          }
          break;
        case 'validTo':
          dates = validateDate(Date.parse(value), validFromValue);
          if (dates.parsedDate <= dates.parsedOtherDate) {
            return errorMessage.invalid;
          } else if (dates.parsedDate < dates.today) {
            return errorMessage.invalid2
          }
          break;
      }
      return ''
    }

    function validateDate(dateInMs, otherDateinMs = "null") {
      const parsedDate = new Date(dateInMs);
      parsedDate.setHours(0, 0, 0, 0);
      const today = new Date();
      today.setHours(0, 0, 0, 0);
      if (otherDateinMs !== 'null') {
        const parsedOtherDate = new Date(otherDateinMs);
        parsedOtherDate.setHours(0, 0, 0, 0);
        return { parsedDate, today, parsedOtherDate }
      }
      return { parsedDate, today };
    }

    function setError(element, message) {
      const inputParent = element.closest('.parent');
      const errorDisplay = inputParent.querySelector('.error');

      errorDisplay.innerText = message;
    }

    async function fetchFunction(url, method, body) {
      const response = await fetch(url, {
        method: method,
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(body)
      })

      const data = await response.json()

      return data;
    }

  </script>
  <%- include('../includes/admin/adminEnd')%>